/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package finaloutput;

import static finaloutput.CashWithdrawal.history;
import static finaloutput.CashWithdrawal.record2;
import static finaloutput.CashWithdrawal.record3;
import static finaloutput.CashWithdrawal.transact;
import static finaloutput.FundTransfer.history;
import static finaloutput.FundTransfer.record2;
import static finaloutput.FundTransfer.record3;
import static finaloutput.FundTransfer.users2;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author Jisi Gabril
 */
public class CloseAccount extends javax.swing.JFrame {
    
   private static final String filepath3 = "src\\finaloutput\\History.json";
    private static JSONParser Parser3 = new JSONParser();
    static JSONObject record3 = new JSONObject();
    static JSONArray history = new JSONArray();
    static JSONObject transact = new JSONObject();
    
    private static final String filepath2 = "src\\finaloutput\\BankAccount.json";
    private static final JSONParser Parser2 = new JSONParser();
    static JSONObject record2 = new JSONObject();
    static JSONArray users2 = new JSONArray();
    
    private static final String filepath = "src\\finaloutput\\AppAccount.json";
    private static final JSONParser Parser = new JSONParser();
    static JSONObject record = new JSONObject();
    static JSONArray users = new JSONArray();
    
    /**
     * Creates new form CloseAccount
     */
    public CloseAccount() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        MainPanel = new javax.swing.JPanel();
        FillUpPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        AccountID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        PinNumber = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ErrorMessageLabel = new javax.swing.JLabel();
        ClearButton = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        CLOSEACCOUNTPANEL = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        FillUpPanel.setBackground(new java.awt.Color(204, 204, 255));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 4));

        AccountID.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        AccountID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 8));

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("         ACCOUNT ID");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));

        PinNumber.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        PinNumber.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 8));
        PinNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PinNumberActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("         PIN NUMBER");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));

        ErrorMessageLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ErrorMessageLabel.setForeground(new java.awt.Color(255, 255, 255));

        ClearButton.setBackground(new java.awt.Color(51, 51, 51));
        ClearButton.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        ClearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearButtonMouseClicked(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("             CLEAR");

        javax.swing.GroupLayout ClearButtonLayout = new javax.swing.GroupLayout(ClearButton);
        ClearButton.setLayout(ClearButtonLayout);
        ClearButtonLayout.setHorizontalGroup(
            ClearButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClearButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );
        ClearButtonLayout.setVerticalGroup(
            ClearButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClearButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        CLOSEACCOUNTPANEL.setBackground(new java.awt.Color(51, 51, 51));
        CLOSEACCOUNTPANEL.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(255, 255, 255)));
        CLOSEACCOUNTPANEL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CLOSEACCOUNTPANELMouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("    CLOSE ACCOUNT");

        javax.swing.GroupLayout CLOSEACCOUNTPANELLayout = new javax.swing.GroupLayout(CLOSEACCOUNTPANEL);
        CLOSEACCOUNTPANEL.setLayout(CLOSEACCOUNTPANELLayout);
        CLOSEACCOUNTPANELLayout.setHorizontalGroup(
            CLOSEACCOUNTPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CLOSEACCOUNTPANELLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        CLOSEACCOUNTPANELLayout.setVerticalGroup(
            CLOSEACCOUNTPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CLOSEACCOUNTPANELLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(ErrorMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PinNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AccountID, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(CLOSEACCOUNTPANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AccountID, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(PinNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CLOSEACCOUNTPANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ErrorMessageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(37, Short.MAX_VALUE))))
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 79, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout FillUpPanelLayout = new javax.swing.GroupLayout(FillUpPanel);
        FillUpPanel.setLayout(FillUpPanelLayout);
        FillUpPanelLayout.setHorizontalGroup(
            FillUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FillUpPanelLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );
        FillUpPanelLayout.setVerticalGroup(
            FillUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(FillUpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FillUpPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void PinNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PinNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PinNumberActionPerformed

    private void CLOSEACCOUNTPANELMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLOSEACCOUNTPANELMouseClicked
        // TODO add your handling code here:
        String ID = AccountID.getText();
        String PIN = PinNumber.getText();
         if(ID.isEmpty()||PIN.isEmpty()){
            ErrorMessageLabel.setText("Please fill in all the field..");
           return;
         }
         
           boolean AccountFound = false;
          boolean AccountPinNumberisMatched = false;

           FileReader reader;
       try {
           reader = new FileReader(filepath2);
        
            if(reader.ready()){
              record2 = (JSONObject) Parser2.parse(reader);
              users2 = (JSONArray) record2.get("Bank Account List");
             
            for(int i =0; i < users2.size(); i++){
            JSONObject user = (JSONObject) users2.get(i);
            String idSTR = (String) user.get("Account ID");
            String Pin = (String) user.get("Pin Number");
            String stat = (String) user.get("Status");
            String balanceSTR = (String) user.get("Balance");
            float balanceNUM = Float.parseFloat(balanceSTR);
            String balnum = (String) user.get("Balance");
            String statvalue = "Deactivated";
            String bal = "0";
            
            if(balnum.equals(balanceSTR)){
             int choice = JOptionPane.showConfirmDialog(null, "you still have remaining balance, with you like to withdraw it all? and close your account?", "Confirmation", JOptionPane.YES_NO_OPTION);
              if (choice == JOptionPane.YES_OPTION) {
              if(idSTR.equals(ID)){
                AccountFound = true;
                if(Pin.equals(PIN)){
                 AccountPinNumberisMatched = true;
                  
                  float totalNUM = balanceNUM -= Float.parseFloat(balnum);
                  String totalSTR = Float.toString(totalNUM);
                      user.put("Balance", totalSTR);
                      user.put("Status",statvalue); 
                        save();
                      
                  //History
                  readTransactionHistory();
                  transact.put("Account ID", ID);
                  transact.put("Transaction Type", "Withdraw");
                  transact.put("Transaction Amount", "-" + balnum);
                  transact.put("Updated Balance", totalSTR);
                  LocalDateTime dateTime = LocalDateTime.now();
                  DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                  transact.put("Transaction Date", dateTime.format(formatter));
                  history.add(transact);
                  saveTransactionHistory();
            
                  JOptionPane.showMessageDialog(null, "Withdrawal Successful");                           
                  JOptionPane.showMessageDialog(null,"Account Deactivated");
                AccountID.setText("");
                PinNumber.setText("");
                 break;
                    }
                  } 
                 } else {
                  break;}
              }            
             } reader.close();
            }
          } catch (FileNotFoundException ex) {
             Logger.getLogger(CloseAccount.class.getName()).log(Level.SEVERE, null, ex);
         } catch (IOException ex) {  
           Logger.getLogger(CloseAccount.class.getName()).log(Level.SEVERE, null, ex);
         } catch (ParseException ex) {  
           Logger.getLogger(CloseAccount.class.getName()).log(Level.SEVERE, null, ex);
       } 
    }//GEN-LAST:event_CLOSEACCOUNTPANELMouseClicked

    private void ClearButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearButtonMouseClicked
        // TODO add your handling code here:
          AccountID.setText("");
          PinNumber.setText("");    
    }//GEN-LAST:event_ClearButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CloseAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CloseAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CloseAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CloseAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CloseAccount().setVisible(true);
            }
        });
    }
    public void FileChecker(){
        try {
            FileReader reader = new FileReader (filepath2);
            
            if(reader.ready()){
                record2 = (JSONObject) Parser2.parse(reader);
                users2 = (JSONArray) record2.get("Bank Account List");
            } else{
                record2 = new JSONObject();
                users2 = new JSONArray();
            }
            reader.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(CloseAccount.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CloseAccount.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(CloseAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void save() throws IOException{
         try (FileWriter file = new FileWriter(filepath2)) {
             file.write(record2.toJSONString());
             file.flush();
         }
    }
    
    private void readTransactionHistory() {
        FileReader reader;
        try {
            reader = new FileReader(filepath3);
            if (reader.ready()) {
                record3 = (JSONObject) Parser3.parse(reader);
                history = (JSONArray) record3.get("Transaction History");
            } else {
               
                record3 = new JSONObject();
                history = new JSONArray();
            }
            reader.close();
        } catch (FileNotFoundException ex) {
            record3 = new JSONObject();
            history = new JSONArray();
        } catch (IOException | ParseException ex) {
            
        }
    } 
    
     private void saveTransactionHistory() {
        record3.put("Transaction History", history);
        try (FileWriter writer = new FileWriter(filepath3)) {
            writer.write(record3.toJSONString());
        } catch (IOException ex) {
            // Handle the exception here
        }
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AccountID;
    private javax.swing.JPanel CLOSEACCOUNTPANEL;
    private javax.swing.JPanel ClearButton;
    private javax.swing.JLabel ErrorMessageLabel;
    private javax.swing.JPanel FillUpPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JTextField PinNumber;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
